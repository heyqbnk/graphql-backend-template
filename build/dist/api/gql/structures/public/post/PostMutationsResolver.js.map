{"version":3,"sources":["dist/api/gql/structures/public/post/PostMutationsResolver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,+CAQsB;AACtB,qDAA0C;AAC1C,qDAA+E;AAC/E,0CAA4C;AAC5C,qDAAqD;AACrD,mCAA8B;AAC9B,sDAAqD;AAGrD,IAAM,cAAc,GAApB,MAAM,cAAc;CAUnB,CAAA;AANC;IAHC,2BAAS,CAAC,CAAC,CAAC;IACZ,2BAAS,CAAC,GAAG,CAAC;IACd,oBAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,EAAC,WAAW,EAAE,OAAO,EAAC,CAAC;;6CAC9B;AAKd;IAHC,2BAAS,CAAC,GAAG,CAAC;IACd,2BAAS,CAAC,IAAI,CAAC;IACf,oBAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,EAAC,WAAW,EAAE,SAAS,EAAC,CAAC;;+CAC9B;AATZ,cAAc;IADnB,uBAAQ,EAAE;GACL,cAAc,CAUnB;AAGD,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAQhC,UAAU,CACU,IAAiB,EACP,IAAoB;QAEhD,MAAM,EAAC,KAAK,EAAE,OAAO,EAAC,GAAG,IAAI,CAAC;QAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAC,CAAC,CAAC;QAEvE,OAAO,IAAI,iBAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAGD,UAAU,CACU,IAAiB,EAGhC,MAAc;QAEjB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC;CACF,CAAA;AAzBC;IADC,eAAM,CAAC,GAAG,EAAE,CAAC,6BAAe,CAAC;8BAClB,6BAAe;yDAAC;AAM5B;IAJC,yBAAY,CAAC,oBAAY,CAAC,UAAU,CAAC;IACrC,uBAAQ,CAAC,GAAG,EAAE,CAAC,iBAAI,EAAE;QACpB,WAAW,EAAE,uBAAuB;KACrC,CAAC;IAEC,WAAA,2BAAc,EAAE,CAAA;IAChB,WAAA,mBAAI,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,CAAA;;6CAAO,cAAc;oCAC/C,iBAAI;uDAKN;AAGD;IADC,uBAAQ,CAAC,GAAG,EAAE,CAAC,iBAAI,CAAC;IAElB,WAAA,2BAAc,EAAE,CAAA;IAChB,WAAA,kBAAG,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,kBAAG,EAAE;QACxB,WAAW,EAAE,iBAAiB;KAC/B,CAAC,CAAA;;;;uDAGH;AA1BU,qBAAqB;IADjC,uBAAQ,EAAE;GACE,qBAAqB,CA2BjC;AA3BY,sDAAqB","file":"PostMutationsResolver.js","sourcesContent":["import {\r\n  Arg,\r\n  Args,\r\n  ArgsType,\r\n  Field,\r\n  Int,\r\n  Mutation,\r\n  Resolver\r\n} from 'type-graphql';\r\nimport {Post} from '~/api/gql/structures';\r\nimport {RequireScope, CurrentUser, UseCurrentUser} from '~/api/gql/decorators';\r\nimport {EAccessScope} from '~/shared/types';\r\nimport {MaxLength, MinLength} from 'class-validator';\r\nimport {Inject} from 'typedi';\r\nimport {PostsController} from '~/shared/controllers';\r\n\r\n@ArgsType()\r\nclass CreatePostArgs {\r\n  @MinLength(3)\r\n  @MaxLength(300)\r\n  @Field(() => String, {description: 'Title'})\r\n  title: string;\r\n\r\n  @MinLength(100)\r\n  @MaxLength(1000)\r\n  @Field(() => String, {description: 'Content'})\r\n  content: string;\r\n}\r\n\r\n@Resolver()\r\nexport class PostMutationsResolver {\r\n  @Inject(() => PostsController)\r\n  controller: PostsController;\r\n\r\n  @RequireScope(EAccessScope.CreatePost)\r\n  @Mutation(() => Post, {\r\n    description: 'Creates new user post'\r\n  })\r\n  createPost(\r\n    @UseCurrentUser() user: CurrentUser,\r\n    @Args(() => CreatePostArgs) args: CreatePostArgs,\r\n  ): Post {\r\n    const {title, content} = args;\r\n    const post = this.controller.create({title, content, userId: user.id});\r\n\r\n    return new Post(post);\r\n  }\r\n\r\n  @Mutation(() => Post)\r\n  deletePost(\r\n    @UseCurrentUser() user: CurrentUser,\r\n    @Arg('postId', () => Int, {\r\n      description: 'Post identifier'\r\n    }) postId: number,\r\n  ): boolean {\r\n    return this.controller.delete(postId, user.id);\r\n  }\r\n}"],"sourceRoot":"/"}