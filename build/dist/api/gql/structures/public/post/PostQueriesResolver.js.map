{"version":3,"sources":["dist/api/gql/structures/public/post/PostQueriesResolver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,+CAA8D;AAC9D,qDAA0C;AAC1C,mCAA8B;AAC9B,sDAAqD;AAGrD,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAQ9B,IAAI,CAC0D,MAAc;QAE1E,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAE7C,IAAI,IAAI,KAAK,IAAI,EAAE;YACjB,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,iBAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;CACF,CAAA;AAhBC;IADC,eAAM,CAAC,GAAG,EAAE,CAAC,6BAAe,CAAC;8BAClB,6BAAe;uDAAC;AAM5B;IAJC,oBAAK,CAAC,GAAG,EAAE,CAAC,iBAAI,EAAE;QACjB,WAAW,EAAE,oBAAoB;QACjC,QAAQ,EAAE,IAAI;KACf,CAAC;IAEC,WAAA,kBAAG,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,kBAAG,EAAE,EAAC,WAAW,EAAE,iBAAiB,EAAC,CAAC,CAAA;;;;+CAQ5D;AAjBU,mBAAmB;IAD/B,uBAAQ,EAAE;GACE,mBAAmB,CAkB/B;AAlBY,kDAAmB","file":"PostQueriesResolver.js","sourcesContent":["import {Arg, Int, Maybe, Query, Resolver} from 'type-graphql';\r\nimport {Post} from '~/api/gql/structures';\r\nimport {Inject} from 'typedi';\r\nimport {PostsController} from '~/shared/controllers';\r\n\r\n@Resolver()\r\nexport class PostQueriesResolver {\r\n  @Inject(() => PostsController)\r\n  controller: PostsController;\r\n\r\n  @Query(() => Post, {\r\n    description: 'Returns post by id',\r\n    nullable: true\r\n  })\r\n  post(\r\n    @Arg('postId', () => Int, {description: 'Post identifier'}) postId: number,\r\n  ): Maybe<Post> {\r\n    const post = this.controller.getById(postId);\r\n\r\n    if (post === null) {\r\n      return null;\r\n    }\r\n    return new Post(post);\r\n  }\r\n}"],"sourceRoot":"/"}