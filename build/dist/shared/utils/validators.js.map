{"version":3,"sources":["dist/shared/utils/validators.ts"],"names":[],"mappings":";;;AAAA;;;;GAIG;AACH,SAAgB,QAAQ,CAAC,KAAU;IACjC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC;AAC9E,CAAC;AAFD,4BAEC;AAED;;;;GAIG;AACH,SAAgB,SAAS,CAAC,KAAU;IAClC,OAAO,OAAO,KAAK,KAAK,SAAS,CAAC;AACpC,CAAC;AAFD,8BAEC;AAED;;;;GAIG;AACH,SAAgB,QAAQ,CAAC,KAAU;IACjC,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;AACnC,CAAC;AAFD,4BAEC;AAED;;;;GAIG;AACH,SAAgB,QAAQ,CAAC,KAAU;IACjC,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;AACnC,CAAC;AAFD,4BAEC;AAED;;;;GAIG;AACH,SAAgB,WAAW,CAAC,KAAU;IACpC,OAAO,OAAO,KAAK,KAAK,WAAW,CAAC;AACtC,CAAC;AAFD,kCAEC;AAED;;;;GAIG;AACH,SAAgB,OAAO,CAAC,KAAU;IAChC,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC9B,CAAC;AAFD,0BAEC","file":"validators.js","sourcesContent":["/**\r\n * States that value is map.\r\n * @param value\r\n * @returns {value is Record<string, unknown>}\r\n */\r\nexport function isObject(value: any): value is Record<string, unknown> {\r\n  return typeof value === 'object' && !Array.isArray(value) && value !== null;\r\n}\r\n\r\n/**\r\n * States that value is boolean.\r\n * @param value\r\n * @returns {value is boolean}\r\n */\r\nexport function isBoolean(value: any): value is boolean {\r\n  return typeof value === 'boolean';\r\n}\r\n\r\n/**\r\n * States that value is string.\r\n * @param value\r\n * @returns {value is string}\r\n */\r\nexport function isString(value: any): value is string {\r\n  return typeof value === 'string';\r\n}\r\n\r\n/**\r\n * States that value is number.\r\n * @param value\r\n * @returns {value is number}\r\n */\r\nexport function isNumber(value: any): value is number {\r\n  return typeof value === 'number';\r\n}\r\n\r\n/**\r\n * States that value is undefined.\r\n * @param value\r\n * @returns {value is undefined}\r\n */\r\nexport function isUndefined(value: any): value is undefined {\r\n  return typeof value === 'undefined';\r\n}\r\n\r\n/**\r\n * States that value is array.\r\n * @param value\r\n * @returns {value is Array<unknown>}\r\n */\r\nexport function isArray(value: any): value is Array<unknown> {\r\n  return Array.isArray(value);\r\n}\r\n"],"sourceRoot":"/"}