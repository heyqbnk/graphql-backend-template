{"version":3,"sources":["dist/api/gql/structures/shared/post/PostFieldsResolver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,+CAA8E;AAC9E,qDAAgD;AAChD,sDAAqD;AACrD,mCAA8B;AAC9B,6CAAmD;AAGnD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAK7B,IAAI,CAAS,IAAU;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEvD,IAAI,IAAI,KAAK,IAAI,EAAE;YACjB,MAAM,IAAI,0BAAiB,EAAE,CAAC;SAC/B;QACD,OAAO,IAAI,iBAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;CACF,CAAA;AAXC;IADC,eAAM,CAAC,GAAG,EAAE,CAAC,6BAAe,CAAC;8BACb,6BAAe;2DAAC;AAGjC;IADC,4BAAa,EAAE;IACV,WAAA,mBAAI,EAAE,CAAA;;qCAAO,iBAAI;;8CAOtB;AAZU,kBAAkB;IAD9B,uBAAQ,CAAC,GAAG,EAAE,CAAC,iBAAI,CAAC;GACR,kBAAkB,CAa9B;AAbY,gDAAkB","file":"PostFieldsResolver.js","sourcesContent":["import {FieldResolver, Resolver, ResolverInterface, Root} from 'type-graphql';\r\nimport {Post, User} from '~/api/gql/structures';\r\nimport {UsersController} from '~/shared/controllers';\r\nimport {Inject} from 'typedi';\r\nimport {UserNotFoundError} from '~/api/gql/errors';\r\n\r\n@Resolver(() => Post)\r\nexport class PostFieldsResolver implements ResolverInterface<Post> {\r\n  @Inject(() => UsersController)\r\n  usersController: UsersController;\r\n\r\n  @FieldResolver()\r\n  user(@Root() post: Post) {\r\n    const user = this.usersController.getById(post.userId);\r\n\r\n    if (user === null) {\r\n      throw new UserNotFoundError();\r\n    }\r\n    return new User(user);\r\n  }\r\n}"],"sourceRoot":"/"}