{"version":3,"sources":["dist/shared/services/Logger.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,mCAAuC;AACvC,iCAAyD;AACzD,kDAA0B;AAC1B,oCAAwC;AAGxC;;GAEG;AAEH,IAAa,MAAM,GAAnB,MAAa,MAAM;IAIjB;;;OAGG;IACH,GAAG,CAAC,GAAG,IAAW;QAChB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,OAAO,EAAE;YAClC,OAAO,CAAC,GAAG,CACT,qBAAa,CAAC,aAAK,CAAC,YAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EACtC,cAAM,CAAC,YAAI,CAAC,GAAG,GAAG,eAAK,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC,EACpD,GAAG,IAAI,CACR,CAAC;SACH;IACH,CAAC;CACF,CAAA;AAfC;IADC,eAAM,CAAC,gBAAW,CAAC;;sCACJ;AAFL,MAAM;IADlB,gBAAO,EAAE;GACG,MAAM,CAiBlB;AAjBY,wBAAM","file":"Logger.js","sourcesContent":["import {Inject, Service} from 'typedi';\r\nimport {black, yellow, bgGreenBright, bold} from 'chalk';\r\nimport dayjs from 'dayjs';\r\nimport {ConfigToken} from '~/shared/di';\r\nimport {IConfig} from '~/shared/config';\r\n\r\n/**\r\n * Responsible for messages logging.\r\n */\r\n@Service()\r\nexport class Logger {\r\n  @Inject(ConfigToken)\r\n  config: IConfig;\r\n\r\n  /**\r\n   * Logs message into console.\r\n   * @param args\r\n   */\r\n  log(...args: any[]) {\r\n    if (this.config.appEnv === 'local') {\r\n      console.log(\r\n        bgGreenBright(black(bold('[Logger]'))),\r\n        yellow(bold('[' + dayjs().format('hh:mm:ss')) + ']'),\r\n        ...args,\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"/"}