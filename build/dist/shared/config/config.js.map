{"version":3,"sources":["dist/shared/config/config.ts"],"names":[],"mappings":";;;;;;AACA,mCAKiB;AACjB,gDAAwB;AACxB,oDAA4B;AAC5B,yEAAgD;AAEhD,2CAA2C;AAC3C,gBAAM,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,eAAe,CAAC,EAAC,CAAC,CAAC;AAEhE,MAAM,MAAM,GAAG,yBAAiB,CAAC,SAAS,CAAC,CAAC;AAC5C,MAAM,UAAU,GAAG,kBAAU,CAAC,aAAa,EAAE,EAAC,YAAY,EAAE,KAAK,EAAC,CAAC,CAAC;AACpE,MAAM,iBAAiB,GAAG,kBAAU,CAAC,qBAAqB,EAAE,EAAC,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC;AAClF,MAAM,IAAI,GAAG,iBAAS,CAAC,MAAM,CAAC,CAAC;AAC/B,MAAM,SAAS,GAAG,iBAAS,CAAC,YAAY,EAAE;IACxC,4CAA4C;IAC5C,YAAY,EAAE,MAAM,KAAK,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;CAClD,CAAC,CAAC;AACH,MAAM,oBAAoB,GAAG,iBAAS,CAAC,yBAAyB,EAAE,EAAC,YAAY,EAAE,UAAU,EAAC,CAAC,CAAC;AAC9F,MAAM,kBAAkB,GAAG,iBAAS,CAAC,uBAAuB,EAAE,EAAC,YAAY,EAAE,EAAE,EAAC,CAAC,CAAC;AAClF,MAAM,qBAAqB,GAAG,iBAAS,CAAC,0BAA0B,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;AAC5F,MAAM,mBAAmB,GAAG,iBAAS,CAAC,wBAAwB,EAAE,EAAC,YAAY,EAAE,EAAE,EAAC,CAAC,CAAC;AACpF,MAAM,YAAY,GAAG,iBAAS,CAAC,gBAAgB,CAAC,CAAC;AAEpC,QAAA,MAAM,GAAY;IAC7B,MAAM;IACN,UAAU;IACV,iBAAiB;IACjB,oBAAoB;IACpB,kBAAkB,EAAE,kBAAkB,IAAI,IAAI;IAC9C,qBAAqB;IACrB,mBAAmB,EAAE,mBAAmB,IAAI,IAAI;IAChD,YAAY;IACZ,IAAI;IACJ,OAAO,EAAE,sBAAW,CAAC,OAAO,GAAG,GAAG,GAAG,MAAM;IAC3C,SAAS,EAAE,SAAS,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;CAC/C,CAAC","file":"config.js","sourcesContent":["import {IConfig} from './types';\r\nimport {\r\n  getAppEnvironment,\r\n  getBoolean,\r\n  getNumber,\r\n  getString,\r\n} from './utils';\r\nimport path from 'path';\r\nimport dotenv from 'dotenv';\r\nimport packageJson from '../../../package.json';\r\n\r\n// Getting environment variables from file.\r\ndotenv.config({path: path.resolve(__dirname, '../../../.env')});\r\n\r\nconst appEnv = getAppEnvironment('APP_ENV');\r\nconst enableCors = getBoolean('ENABLE_CORS', {defaultValue: false});\r\nconst enableMultiThread = getBoolean('ENABLE_MULTI_THREAD', {defaultValue: true});\r\nconst port = getNumber('PORT');\r\nconst sentryDsn = getString('SENTRY_DSN', {\r\n  // In production and staging require sentry.\r\n  defaultValue: appEnv === 'local' ? '' : undefined,\r\n});\r\nconst gqlAdminHttpEndpoint = getString('GQL_ADMIN_HTTP_ENDPOINT', {defaultValue: '/gql-adm'});\r\nconst gqlAdminWSEndpoint = getString('GQL_ADMIN_WS_ENDPOINT', {defaultValue: ''});\r\nconst gqlPublicHttpEndpoint = getString('GQL_PUBLIC_HTTP_ENDPOINT', {defaultValue: '/gql'});\r\nconst gqlPublicWSEndpoint = getString('GQL_PUBLIC_WS_ENDPOINT', {defaultValue: ''});\r\nconst jwtSecretKey = getString('JWT_SECRET_KEY');\r\n\r\nexport const config: IConfig = {\r\n  appEnv,\r\n  enableCors,\r\n  enableMultiThread,\r\n  gqlAdminHttpEndpoint,\r\n  gqlAdminWSEndpoint: gqlAdminWSEndpoint || null,\r\n  gqlPublicHttpEndpoint,\r\n  gqlPublicWSEndpoint: gqlPublicWSEndpoint || null,\r\n  jwtSecretKey,\r\n  port,\r\n  release: packageJson.version + '-' + appEnv,\r\n  sentryDsn: sentryDsn === '' ? null : sentryDsn,\r\n};\r\n"],"sourceRoot":"/"}