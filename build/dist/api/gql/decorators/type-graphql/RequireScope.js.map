{"version":3,"sources":["dist/api/gql/decorators/type-graphql/RequireScope.ts"],"names":[],"mappings":";;;AAAA,+CAAmD;AAGnD,6CAAuE;AACvE,0CAAuC;AAEvC;;;;GAIG;AACH,SAAgB,YAAY,CAAC,MAAqC;IAChE,MAAM,eAAe,GAAG,eAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IAE5D,OAAO,oCAAqB,CAAc,KAAK,EAAE,EAAC,OAAO,EAAC,EAAE,IAAI,EAAE,EAAE;QAClE,IAAI,CAAC,CAAC,MAAM,IAAI,OAAO,CAAC,EAAE;YACxB,MAAM,IAAI,2BAAkB,EAAE,CAAC;SAChC;QACD,MAAM,gBAAgB,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YACjD,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,EAAE;YACrB,MAAM,IAAI,0BAAiB,EAAE,CAAC;SAC/B;QACD,MAAM,IAAI,EAAE,CAAC;IACf,CAAC,CAAC,CAAC;AACL,CAAC;AAhBD,oCAgBC","file":"RequireScope.js","sourcesContent":["import {createMethodDecorator} from 'type-graphql';\r\nimport {EAccessScope} from '~/shared/types';\r\nimport {TAnyContext} from '~/api/gql/types';\r\nimport {MissingScopeError, AuthorizationError} from '~/api/gql/errors';\r\nimport {isArray} from '~/shared/utils';\r\n\r\n/**\r\n * Checks if current client has all required scopes.\r\n * @param scopes\r\n * @constructor\r\n */\r\nexport function RequireScope(scopes: EAccessScope | EAccessScope[]) {\r\n  const formattedScopes = isArray(scopes) ? scopes : [scopes];\r\n\r\n  return createMethodDecorator<TAnyContext>(async ({context}, next) => {\r\n    if (!('user' in context)) {\r\n      throw new AuthorizationError();\r\n    }\r\n    const isEachScopeFound = formattedScopes.every(s => {\r\n      return context.user.scopes.includes(s);\r\n    });\r\n\r\n    if (!isEachScopeFound) {\r\n      throw new MissingScopeError();\r\n    }\r\n    await next();\r\n  });\r\n}"],"sourceRoot":"/"}